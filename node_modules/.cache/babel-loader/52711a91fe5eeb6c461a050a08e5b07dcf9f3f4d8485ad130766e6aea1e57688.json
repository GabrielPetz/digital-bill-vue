{"ast":null,"code":"import axios from \"axios\";\nimport ViewBillResult from \"../components/report/ViewBillResult\";\nimport ViewBillForm from \"../components/forms/ViewBillForm\";\nimport NoDataFound from \"../components/empty/NoDataFound.vue\";\nimport EmptyResult from \"../components/empty/EmptyResult.vue\";\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\nexport default {\n  name: 'ViewBill',\n  components: {\n    ViewBillResult,\n    ViewBillForm,\n    NoDataFound,\n    EmptyResult\n  },\n  data() {\n    return {\n      bills: null,\n      // this.getBills(),\n      categories: null,\n      // this.getCategories(),\n      selectedBill: null,\n      selectedCategories: null,\n      renderResult: null\n    };\n  },\n  methods: {\n    query() {\n      console.log(this.selectedBill);\n      console.log(this.selectedCategories);\n      if (this.selectedBill) {\n        this.renderResult = \"ViewBillResult\";\n      } else {\n        this.renderResult = \"EmptyResult\";\n      }\n    },\n    async getBills() {\n      await axios({\n        method: 'get',\n        url: 'http://localhost:8001/api/bill/',\n        withCredentials: false,\n        responseType: 'json'\n      }).then(response => this.bills = response.data);\n    },\n    async getCategories() {\n      await axios({\n        method: 'get',\n        url: 'http://localhost:8001/api/category/',\n        responseType: 'json'\n      }).then(response => this.categories = response.data);\n    }\n  },\n  created() {\n    this.getBills();\n    this.getCategories();\n  }\n};","map":{"version":3,"mappings":"AA6BA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,cAAa,MAAO,qCAAoC;AAC/D,OAAOC,YAAW,MAAO,kCAAiC;AAC1D,OAAOC,WAAU,MAAO,qCAAoC;AAC5D,OAAOC,WAAU,MAAO,qCAAoC;AAE5DJ,KAAK,CAACK,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,IAAI,gCAAgC;AAE9E,eAAe;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE;IACRR,cAAc;IAAEC,YAAY;IAAEC,WAAW;IAAEC;EAC/C,CAAC;EACDM,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAE,IAAI;MAAE;MACbC,UAAU,EAAE,IAAI;MAAE;MAClBC,YAAY,EAAE,IAAI;MAClBC,kBAAkB,EAAE,IAAI;MACxBC,YAAY,EAAE;IAClB;EACJ,CAAC;EACDC,OAAO,EAAE;IACLC,KAAK,GAAG;MACJC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACN,YAAY;MAC7BK,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,kBAAkB;MACnC,IAAI,IAAI,CAACD,YAAY,EAAE;QACnB,IAAI,CAACE,YAAW,GAAI,gBAAe;MACvC,OAAO;QACH,IAAI,CAACA,YAAW,GAAI,aAAY;MACpC;IACJ,CAAC;IACD,MAAMK,QAAQ,GAAG;MACb,MAAMpB,KAAK,CAAC;QACRqB,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,iCAAiC;QACtCC,eAAe,EAAE,KAAK;QACtBC,YAAY,EAAE;MAClB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK,IAAI,CAACf,KAAI,GAAIe,QAAQ,CAAChB,IAAI;IAClD,CAAC;IACD,MAAMiB,aAAa,GAAG;MAClB,MAAM3B,KAAK,CAAC;QACRqB,MAAM,EAAE,KAAK;QACbC,GAAG,EAAE,qCAAqC;QAC1CE,YAAY,EAAE;MAClB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAO,IAAK,IAAI,CAACd,UAAS,GAAIc,QAAQ,CAAChB,IAAI;IACvD;EACJ,CAAC;EACDkB,OAAO,GAAG;IACN,IAAI,CAACR,QAAQ,EAAC;IACd,IAAI,CAACO,aAAa,EAAC;EACvB;AAEJ","names":["axios","ViewBillResult","ViewBillForm","NoDataFound","EmptyResult","defaults","headers","post","name","components","data","bills","categories","selectedBill","selectedCategories","renderResult","methods","query","console","log","getBills","method","url","withCredentials","responseType","then","response","getCategories","created"],"sourceRoot":"","sources":["/home/petz/Meus projetos/digital-bill-vue/src/views/ViewBill.vue"],"sourcesContent":["<template>\n    <div>\n        <!-- <div class=\"row\">\n            <div class=\"col-lg-6 col-sm-12\">\n                <label for=\"bill\">Selecione uma fatura</label>\n                <select id=\"bill\" class=\"form-select\" v-model=\"selectedBill\">\n                    <option v-for=\"bill in bills\" :key=\"bill.id\" :value=\"bill.id\">{{ bill.name }}</option>\n                </select>\n            </div>\n            <div class=\"col-lg-6 col-sm-12\">\n                <label for=\"ignore-category\">Categorias para ignorar</label>\n                <select id=\"ignore-category\" class=\"form-select\" v-model=\"selectedCategories\" multiple>\n                    <option v-for=\"category in categories\" :key=\"category.id\" :value=\"category.id\">{{ category.name }}\n                    </option>\n                </select>\n            </div>\n            <div class=\"d-grid gap-2 col-lg-12 col-md-12 col-sm-12 mx-auto mt-4\">\n                <button type=\"button\" @click=\"query\" class=\"btn btn-outline-primary\">Consultar</button>\n            </div>\n        </div> -->\n\n\n        <div id=\"view-bill-result\" class=\"row\">\n            <component :is=\"renderResult\"></component>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport ViewBillResult from \"../components/report/ViewBillResult\"\nimport ViewBillForm from \"../components/forms/ViewBillForm\"\nimport NoDataFound from \"../components/empty/NoDataFound.vue\"\nimport EmptyResult from \"../components/empty/EmptyResult.vue\"\n\naxios.defaults.headers.post['Content-Type'] = 'application/json;charset=utf-8';\n\nexport default {\n    name: 'ViewBill',\n    components: {\n        ViewBillResult, ViewBillForm, NoDataFound, EmptyResult\n    },\n    data() {\n        return {\n            bills: null, // this.getBills(),\n            categories: null, // this.getCategories(),\n            selectedBill: null,\n            selectedCategories: null,\n            renderResult: null\n        }\n    },\n    methods: {\n        query() {\n            console.log(this.selectedBill)\n            console.log(this.selectedCategories)\n            if (this.selectedBill) {\n                this.renderResult = \"ViewBillResult\"\n            } else {\n                this.renderResult = \"EmptyResult\"\n            }\n        },\n        async getBills() {\n            await axios({\n                method: 'get',\n                url: 'http://localhost:8001/api/bill/',\n                withCredentials: false,\n                responseType: 'json',\n            }).then(response => this.bills = response.data)\n        },\n        async getCategories() {\n            await axios({\n                method: 'get',\n                url: 'http://localhost:8001/api/category/',\n                responseType: 'json',\n            }).then(response => this.categories = response.data)\n        }\n    },\n    created() {\n        this.getBills()\n        this.getCategories()\n    }\n\n}\n</script>\n\n<style scoped>\n\n</style>\n\n<style>\nmain.mt-auto {\n    margin-top: 10% !important;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}