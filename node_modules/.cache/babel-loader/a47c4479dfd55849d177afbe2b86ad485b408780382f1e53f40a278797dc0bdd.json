{"ast":null,"code":"import { reactive, toRefs } from '@vue/reactivity';\nexport default {\n  name: \"TabA\",\n  setup() {\n    const data = reactive({\n      now: new Date()\n    });\n    return {\n      ...toRefs(data)\n    };\n  },\n  beforeUnmount() {\n    // prevent memory leak\n    // clearInterval(this.interval)\n  },\n  created() {\n    // this.interval = setInterval(() => {\n    //   // Concise way to format time according to system locale.\n    //   // In my case this returns \"3:48:00 am\"\n\n    // }, 10)\n\n    this.now = Intl.DateTimeFormat(navigator.language, {\n      hour: 'numeric',\n      minute: 'numeric',\n      second: 'numeric'\n    }).format();\n  }\n};","map":{"version":3,"mappings":"AAKA,SAASA,QAAQ,EAAEC,MAAK,QAAS,iBAAgB;AACjD,eAAe;EACbC,IAAI,EAAE,MAAM;EACZC,KAAK,GAAG;IACN,MAAMC,IAAG,GAAIJ,QAAQ,CAAC;MACpBK,GAAG,EAAE,IAAIC,IAAI;IACf,CAAC;IAED,OAAO;MAAE,GAAGL,MAAM,CAACG,IAAI;IAAE;EAC3B,CAAC;EACDG,aAAa,GAAG;IACd;IACA;EAAA,CACD;EACDC,OAAO,GAAG;IACR;IACA;IACA;;IAEA;;IAEA,IAAI,CAACH,GAAE,GAAII,IAAI,CAACC,cAAc,CAACC,SAAS,CAACC,QAAQ,EAAE;MAC/CC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,MAAM,EAAE;IACV,CAAC,CAAC,CAACC,MAAM,EAAC;EACd;AACF","names":["reactive","toRefs","name","setup","data","now","Date","beforeUnmount","created","Intl","DateTimeFormat","navigator","language","hour","minute","second","format"],"sourceRoot":"","sources":["/home/petz/Meus projetos/digital-bill-vue/src/views/to_remove/TabA.vue"],"sourcesContent":["<template>\n  <span>Tab A {{ now }}</span>\n</template>\n  \n<script>\nimport { reactive, toRefs } from '@vue/reactivity'\nexport default {\n  name: \"TabA\",\n  setup() {\n    const data = reactive({\n      now: new Date(),\n    })\n\n    return { ...toRefs(data) }\n  },\n  beforeUnmount() {\n    // prevent memory leak\n    // clearInterval(this.interval)\n  },\n  created() {\n    // this.interval = setInterval(() => {\n    //   // Concise way to format time according to system locale.\n    //   // In my case this returns \"3:48:00 am\"\n      \n    // }, 10)\n\n    this.now = Intl.DateTimeFormat(navigator.language, {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n      }).format()\n  }\n}\n</script>\n  \n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}