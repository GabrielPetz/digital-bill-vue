{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"span\", null, \"Tab A \" + _toDisplayString(_ctx.now), 1 /* TEXT */);\n}","map":{"version":3,"mappings":";;uBACEA,oBAA4B,cAAtB,QAAM,oBAAGC,QAAG","names":["_createElementBlock","_ctx"],"sourceRoot":"","sources":["/home/petz/Meus projetos/digital-bill-vue/src/views/to_remove/TabA.vue"],"sourcesContent":["<template>\n  <span>Tab A {{ now }}</span>\n</template>\n  \n<script>\nimport { reactive, toRefs } from '@vue/reactivity'\nexport default {\n  name: \"TabA\",\n  setup() {\n    const data = reactive({\n      now: new Date(),\n    })\n\n    return { ...toRefs(data) }\n  },\n  beforeUnmount() {\n    // prevent memory leak\n    clearInterval(this.interval)\n  },\n  created() {\n    this.interval = setInterval(() => {\n      // Concise way to format time according to system locale.\n      // In my case this returns \"3:48:00 am\"\n      this.time = Intl.DateTimeFormat(navigator.language, {\n        hour: 'numeric',\n        minute: 'numeric',\n        second: 'numeric'\n      }).format()\n    }, 1000)\n\n  }\n\n}\n</script>\n  \n<style>\n\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}